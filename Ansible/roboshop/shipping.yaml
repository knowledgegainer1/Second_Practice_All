- name: Shipping PlayBook
  become: yes
  vars:
    mysql_password: RoboShop@1
  hosts: shipping
  tasks:
    - name: Installing maven PlayBook
      ansible.builtin.package:
        name: maven
        state: present

    - name: Getting user details PLAY
      ansible.builtin.shell: id roboshop
      register: userdetails
      ignore_errors: True

    - name: Printing error
      ansible.builtin.debug:
        msg: "user not found so creating"

    - name: Add the user 'roboshop' PLAY
      ansible.builtin.user:
        name: "roboshop"
        comment: John Doe
      when: userdetails.rc != 0

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /app
        state: directory
        mode: "0777"
    - name: Download foo.conf
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp/shipping.zip

    - name: Unarchive a file that is already on the remote machine
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: mvn  install
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: remane
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app
    - name: Copy file  cart side
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: Make sure a service unit is running
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Start service httpd, if not started
      ansible.builtin.service:
        name: shipping
        state: started
        enabled: yes

    - name: Installing maven PlayBook
      ansible.builtin.package:
        name: mysql
        state: present

    - name: check cities schema exists or not
      ansible.builtin.shell: mysql -h 172.31.32.86 -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema

    - name: print output
      ansible.builtin.debug:
        msg: "schema output: {{schema}}"

    - name: load cities data
      ansible.builtin.shell: "mysql -h 172.31.32.86 -uroot -p{{mysql_password}}  < /app/schema/shipping.sql"
      when: schema.stdout != "1"

    - name: Start service httpd, if not started
      ansible.builtin.service:
        name: shipping
        state: started
        enabled: yes
